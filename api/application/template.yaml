AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.

Parameters:
  CognitoClientUrl:
    Type: String
    # AllowedPattern: ^[a-zA-Z0-9]{26}$
  CognitoClientId:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]{26}$
  CognitoClientSecret:
    Type: String
    AllowedPattern: ^[a-zA-Z0-9]{52}$

Globals:
  Api: {}
  Function:
    AutoPublishAlias: live
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    Architectures:
      - arm64
    EphemeralStorage:
      Size: 512
    MemorySize: 256
    Timeout: 15
    Runtime: java21
    RecursiveLoop: Terminate
    Layers:
      - !Ref DependencyLayer
    RuntimeManagementConfig:
      UpdateRuntimeOn: Auto
    Environment:
      Variables:
        COGNITO_CLIENT_URL: !Ref CognitoClientUrl
        COGNITO_CLIENT_ID: !Ref CognitoClientId
        COGNITO_CLIENT_SECRET: !Ref CognitoClientSecret
    EventInvokeConfig:
      MaximumEventAgeInSeconds: 60
      MaximumRetryAttempts: 0
      DestinationConfig: { }
    SnapStart:
      ApplyOn: PublishedVersions

Resources:
  DependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: api/application/core/build/libs.zip
      LayerName: dependencies
      CompatibleArchitectures:
        - arm64
      CompatibleRuntimes:
        - java21

  authLambda:
    Type: AWS::Serverless::Function
    dependsOn:
      - DependencyLayer
    Metadata:
      BuildMethod: makefile
    Properties:
      AutoPublishAliasAllProperties: true
      CodeUri: ./api
      PackageType: Zip
      Environment:
        Variables:
          MAIN_CLASS: com.ppojin.sl.oauth2.ServerlessOauth2Application
          FUNCTION_NAME: apiGatewayEventHandler
      Events:
        Oauth2:
          Type: Api
          Properties:
            Path: /oauth2
            Method: GET
            RestApiId: !Ref testApi
            Auth:
              Authorizer: NONE

  pocLambda:
    Type: AWS::Serverless::Function
    dependsOn:
      - DependencyLayer
    Metadata:
      BuildMethod: makefile
    Properties:
      AutoPublishAliasAllProperties: true
      CodeUri: ./api
      PackageType: Zip
      Environment:
        Variables:
          MAIN_CLASS: com.ppojin.sl.poc.PocApplication
          FUNCTION_NAME: pocRouter
      Events:
        Uppercase:
          Type: Api
          Properties:
            Path: /uppercase
            Method: GET
            RestApiId: !Ref testApi
            Auth:
              Authorizer: NONE
        reversed:
          Type: Api
          Properties:
            Path: /reversed
            Method: GET
            RestApiId: !Ref testApi
            Auth:
              Authorizer: NONE

Outputs:
  PocLambdaUri:
    Value: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${pocLambda.Arn}:live/invocations
  AuthLambdaUri:
    Value: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${authLambda.Arn}:live/invocations